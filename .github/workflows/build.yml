name: Build & Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install Rust, Clippy and Rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Build Release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Upload Binary
        uses: actions/upload-artifact@v1
        with:
          name: docsrs
          path: target/release/docsrs

  release:
    needs: build
    runs-on: macos-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v1
      - name: Get current time
        id: get_current_time
        run: echo ::set-output name=CURRENT_TIME::$(date +"%Y-%m-%d %H:%M:%S")
      - uses: actions/download-artifact@v1
        with:
          name: docsrs
      - run: cp docsrs/docsrs workflow/
      - name: Package Workflow
        run: ./release.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          release_name: ${{ steps.get_current_time.outputs.CURRENT_TIME }}
          tag_name: ${{ steps.get_current_time.outputs.CURRENT_TIME }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./SearchDocs.rs.alfredworkflow
          asset_name: SearchDocs.rs-${{ github.ref }}.alfredworkflow
          asset_content_type: application/octet-stream
