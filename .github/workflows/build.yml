name: Build & Test

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1
#      - name: Install Rust, Clippy and Rustfmt
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          components: rustfmt, clippy
#      - name: Format
#        uses: actions-rs/cargo@v1
#        with:
#          command: fmt
#          args: --all -- --check
#      - name: Clippy
#        uses: actions-rs/cargo@v1
#        with:
#          command: clippy
#      - name: Test
#        uses: actions-rs/cargo@v1
#        with:
#          command: test
#      - name: Build Release
#        uses: actions-rs/cargo@v1
#        with:
#          command: build
#          args: --release
      - name: Junk
        run: |
          mkdir target/release
          touch target/release/docsrs
      - name: Upload Binary
        uses: actions/upload-artifact@v1
        with:
          name: docsrs
          path: target/release/docsrs

  release:
    needs: build
    runs-on: macos-latest
#    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v1
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/download-artifact@v1
        with:
          name: docsrs
          path: workflow/docsrs
      - name: Package Workflow
        run: |
          ./release.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./SearchDocs.rs.alfredworkflow
          asset_name: SearchDocs.rs-${{ github.ref }}.alfredworkflow
